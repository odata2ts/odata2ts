# ##################################################
# HTTP Tests against Trippin Service
#
#
# ##################################################

# --- CONFIUGARTION ---

@rootUrl = https://services.odata.org/TripPinRESTierService
@contentType = application/json


### @name GetKey
GET {{rootUrl}}

### TODO Here we would need redirect infos or parse the @odata.context variable
### in order to automatically determine the new session id from Trippin
### => static sessionId
# @authToken = {{login.response.headers.X-AuthToken}}
@sessionId = (S(sivik5crfo3qvprrreziudlp))
@baseUrl = {{rootUrl}}/{{sessionId}}

# --- METADATA ---
### @name metadata
GET {{baseUrl}}/$metadata


# --- ENTITY SETS ---

### List entities
### @name people
GET {{baseUrl}}/People?$count=true
### @name airlines
GET {{baseUrl}}/Airlines?$count=true
### @name airports
GET {{baseUrl}}/Airports?$count=true

### Entity by id
### canonical way
GET {{baseUrl}}/Airports('KSFO')
### explicit way => required for composite keys
GET {{baseUrl}}/Airports(IcaoCode='KSFO')
### alternative, restier way
GET {{baseUrl}}/Airports/KSFO

### Create Entity
### new person
POST {{baseUrl}}/People
Content-Type: {{contentType}}

{
  "UserName": "heineritis",
  "FirstName": "Heiner",
  "LastName": "Itis",
  "Emails": ["heineritis@odata.org"],
  "AddressInfo": [{
    "Address": "Teststr. 33, Biefe",
    "City": {
      "Name": "San Biefe",
      "CountryRegion": "France",
      "Region": "Arrandissement 13"
    }
  }]
}
### get person
GET {{baseUrl}}/People('heineritis')
### patch person
PATCH {{baseUrl}}/People('heineritis')
Content-Type: {{contentType}}

{
  "MiddleName": "H."
}
### update person
PUT {{baseUrl}}/People('heineritis')
Content-Type: application/json

{
  "Age": 33
}
### update person
DELETE  {{baseUrl}}/People('heineritis')


# --- SINGLETON ---
### @name me
GET {{baseUrl}}/Me


# --- FUNCTIONS ---

### unbound func
GET {{baseUrl}}/GetPersonWithMostFriends

### func with params
GET {{baseUrl}}/GetNearestAirport(lat=51.918777,lon=8.620930)

### func bound to trip => params are taken from the path
GET {{baseUrl}}/People('russellwhyte')/Trips(0)/GetInvolvedPeople

### also works with namespace prefix
GET {{baseUrl}}/People('russellwhyte')/Trips(0)/Trippin.GetInvolvedPeople

### func bound with params
GET {{baseUrl}}/People('russellwhyte')/Trippin.GetFriendsTrips(userName='scottketchum')


# --- ACTIONS ---

### unbound action
POST {{baseUrl}}/ResetDataSource

### bound action
POST {{baseUrl}}/People('russellwhyte')/Trippin.UpdateLastName
Content-Type: {{contentType}}

{
  "lastName": "Tester"
}

###
GET {{baseUrl}}/People('russellwhyte')



# --- QUERIES ---

### Airport by Id
GET {{baseUrl}}/Airports('KSFO')
### Person by Id
GET {{baseUrl}}/People('russellwhyte')

### Querying for Complex Prop Only
GET {{baseUrl}}/Airports('KSFO')/Location
### Querying for Single Prop Only
GET {{baseUrl}}/Airports('KSFO')/Location/Address
### Querying for Single Value Only
GET {{baseUrl}}/Airports('KSFO')/Location/Address/$value

### Navigatable Collection Prop
GET {{baseUrl}}/People('russellwhyte')/Trips?$count=true
###
GET {{baseUrl}}/People('russellwhyte')/Friends?$count=true
### Navigatable Collection Prop by Id
GET {{baseUrl}}/People('russellwhyte')/Trips(0)
###
GET {{baseUrl}}/People('russellwhyte')/Friends('scottketchum')

### Primitive Collections
GET {{baseUrl}}/People('russellwhyte')/Emails?$count=true
### $it does the trick for referencing the primitive value
GET {{baseUrl}}/People('russellwhyte')/Emails?$orderby=$it desc
### $it with filtering
GET {{baseUrl}}/People('russellwhyte')/Emails?$filter=contains($it,'contoso')

### Non-exposed Collections: Trips
GET {{baseUrl}}/People('russellwhyte')?$expand=Trips
### by id
GET {{baseUrl}}/People('russellwhyte')/Trips/0

### Derived Entity Type
GET {{baseUrl}}/People/Trippin.Employee
###
GET {{baseUrl}}/People('kristakemp')/Trippin.Employee
### Manager example
GET {{baseUrl}}/People/Trippin.Manager
###
GET {{baseUrl}}/People('genevievereeves')/Trippin.Manager

### $Count
GET {{baseUrl}}/People('russellwhyte')/Friends/$count
### $Count
GET {{baseUrl}}/People$filter=Friends/$count gt 2

### Lambda Operators
GET {{baseUrl}}/People?$filter=Trips/any(a:a/Budget gt 2999)
&$select=FirstName,LastName
&$count=true
&$expand=Trips($select=Description,Budget)
### complex search
GET {{baseUrl}}/People?$filter=Trips/any(a:a/Budget gt 2999 and a/Budget lt 5000)
&$select=FirstName,LastName
&$count=true
&$expand=Trips($select=Description,Budget)
### all
GET {{baseUrl}}/People?
&$filter=Trips/all(a:a/Budget ge 5000)
&$select=FirstName,LastName
&$count=true
&$expand=Trips($select=Description,Budget)
### any with primitive collection
GET {{baseUrl}}/People('russellwhyte')/Trips?$filter=Tags/any(a:a eq 'New York meeting')
&$count=true


&$expand=Trips($select=Description,Budget,Tags)

### $this doesn't work
GET {{baseUrl}}/People?$expand=Friends($select=UserName;$filter=$it/BestFriend/UserName ne $this/UserName),BestFriend($select=UserName)&$select=UserName
# &$expand=Trips($select=Description,Budget)

### $OrderBy
GET {{baseUrl}}/People('russellwhyte')/Friends?$select=LastName&$orderby=LastName
### desc
GET {{baseUrl}}/People('russellwhyte')/Friends?$select=LastName&$orderby=LastName desc
### multi
GET {{baseUrl}}/People?$select=Gender,UserName&$orderby=Gender desc,Username desc
### in expand
GET {{baseUrl}}/People('russellwhyte')?$select=LastName&$expand=Friends($select=LastName;$orderby=LastName desc)
### with $count
GET {{baseUrl}}/People?$select=UserName&$orderby=Friends/$count desc&$expand=Friends($select=UserName)


# --- PATCHING ---
### Update Collection Prop by Id => 501 not implemented
PATCH {{baseUrl}}/People('russellwhyte')/Trips(0)
Content-Type: {{contentType}}

{
  "Budget": 3005
}

### Update NavProp Collection
GET {{baseUrl}}/People('russellwhyte')/Trips
### Create - note: need to manually specify ID
POST {{baseUrl}}/People('russellwhyte')/Trips
Content-Type: {{contentType}}

{
  "TripId": 5,
  "ShareId": "109b2fa0-efbf-490e-a5e3-bac8f7d47100",
  "Name": "Test Trip",
  "Budget": 1000,
  "Description": "Testing Field Trip",
  "Tags": [
    "business",
    "New York meeting"
  ],
  "StartsAt": "2021-01-01T00:00:00Z",
  "EndsAt": "2021-01-04T00:00:00Z"
}
### Update: 501 not implemented
PATCH {{baseUrl}}/People('russellwhyte')/Trips(0)
Content-Type: {{contentType}}

{
  "Budget": 3005
}
### Delete
DELETE  {{baseUrl}}/People('russellwhyte')/Trips(5)




# --- FILTERING ---
### Filtering by complex type substructure
GET {{baseUrl}}/People('russellwhyte')/AddressInfo?$filter=City/Name eq 'Boise'


### Filter enum type
GET https://services.odata.org/TripPinRESTierService/People
?$select=FirstName,Gender
&$filter=Gender eq 'Female'

### Finally a working "in" statement
GET https://services.odata.org/TripPinRESTierService/People
?$select=FirstName
&$filter=FirstName in ('Russell')

### Groupby
GET {{baseUrl}}/People?$select=Gender&$apply=aggregate(Gender with countdistinct as counter)

### Groupby
GET {{baseUrl}}/People
